Want to make a minimum SQL database
- SQL-87 (nothing fancy)
- Simple datatypes
- 255 character varchar limit
- 32 column table limit
- One database per file
- No transactions
- No foreign keys or other constraints

1. DataModel
2. Execution
3. SQL Parser
4. Benchmarks against SQLite

Let's start from the bottom: columns.  They have a type and a name.  In the future they may have more

Then we define a row.  Rows have an array of column values

Finally, a table has an array of column types (up to a fixed limit) and a pointer to a bunch of rows.  Oh, and a table name.

OK, now that we have the basic definitions out of the way, we need an API to manipulate them.  First off, we need a way to create and drop tables.
We should try to have the API mimic the eventual schema definitions as closely as possible.

When deleting rows, we'll just mark them as deleted, then we'll have a COMPACT statement that goes in and cleans them up

Print out the results in a pretty fashion

